{"version":3,"sources":["app/layout/home.jsx","services/http-service.js","services/auth-service.js","services/users-service.js","services/movies-service.js","services/genres-service.js","app/layout/navbar.jsx","shared/like.jsx","shared/list-group.jsx","shared/not-found.jsx","shared/sort-icon.jsx","shared/form/input.jsx","shared/form/select.jsx","shared/form/form.jsx","shared/form/search-box.jsx","shared/table/table-header.jsx","shared/table/table-body.jsx","shared/table/table.jsx","shared/table/table-pagination.jsx","app/layout/login.jsx","app/layout/register.jsx","app/movies/movie-details.jsx","app/movies/movies-table.jsx","app/movies/movies.jsx","app/movies/new-movie.jsx","shared/protected-route.jsx","app/app-routes.jsx","app/app.jsx","serviceWorker.js","index.jsx"],"names":["Component","axios","interceptors","response","use","result","url","config","hasFullResponse","every","item","indexOf","Promise","resolve","data","error","reject","get","put","delete","patch","post","setToken","token","defaults","headers","common","headerTokenKey","is404Ex","ex","status","is400Ex","apiUrl","baseApiUrl","email","password","a","http","localStorage","setItem","getToken","getItem","login","logout","user","removeItem","getCurrentUser","JwtDecode","loginWithToken","username","name","register","movieUrl","id","getMovies","pageNumber","pageSize","genreId","sort","liked","deleted","query","startIndex","totalCount","movies","_","chain","filter","movie","genre","_id","title","toLocaleLowerCase","orderBy","path","order","tap","forEach","length","slice","take","value","getMovie","saveMovie","body","deleteMovie","searchMovies","getGenre","genreUrl","getGenres","Navbar","props","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","Fragment","href","onClick","e","preventDefault","authService","window","location","handleLogout","Like","icon","faHeartSolid","faHeartReg","ListGroup","items","textProperty","valueProperty","onItemSelect","orderProperty","selectedItem","getItemCssClass","map","Error","key","defaultProps","NotFound","SortIcon","faSortUp","faSortDown","Input","label","rest","htmlFor","Select","options","option","Form","state","errors","validate","Joi","schema","abortEarly","details","message","handleSubmit","setState","submit","handleChange","event","target","currentTarget","errorMessage","validateProperty","handleClear","prop","index","input","obj","this","onChange","disabled","SearchBox","placeholder","TableHeader","columns","onSort","column","raiseSort","TableBody","content","renderCell","propTypes","PropTypes","object","isRequired","func","array","Table","onDelete","onLike","TablePagination","activePageNumber","onPageChange","pagesCount","Math","ceil","pagesNumbers","range","getPageCssClasses","Login","string","required","from","pathname","httpService","form","action","Register","regex","min","max","usersService","history","replace","MoviesTable","link","faTrash","isAdmin","remove","Movies","genres","selectedGenre","genresService","queryString","parse","search","queryGenre","find","toLowerCase","moviesService","handleGenreSelect","handleSearch","handleSort","handleLike","handleDelete","page","handlePageChange","newState","currentPage","push","toggleLikeMovie","NewMovie","numberInStock","dailyRentalRate","number","movieId","match","params","mapToMovieModel","renderInput","renderSelect","ProtectedRoute","component","render","innerProps","AppRoutes","exact","App","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"2YAEmBA,Y,+CCGnBC,IAAMC,aAAaC,SAASC,KAAI,SAACC,GAC7B,IAAMC,EAAMD,EAAOE,OAAOD,IAKtBE,GAAkB,EAOtB,MAXyB,CACrB,cACA,cAGaC,OAAM,SAACC,GACpB,GAAIJ,EAAIK,QAAQD,IAAS,EACrB,OAAOF,GAAkB,KAI5BA,EAGMI,QAAQC,QAAQR,GAFhBO,QAAQC,QAAQR,EAAOS,SAGnC,SAACC,GACA,OAAOH,QAAQI,OAAOD,MAO1B,IAOe,GACXE,IAAKhB,IAAMgB,IACXC,IAAKjB,IAAMiB,IACXC,OAAQlB,IAAMkB,OACdC,MAAOnB,IAAMmB,MACbC,KAAMpB,IAAMoB,KACZC,SAjBG,SAAkBC,GACrBtB,IAAMuB,SAASC,QAAQC,OAAOC,KAAkBJ,GAiBhDK,QAXY,SAACC,GACb,OAAOA,GAAMA,EAAG1B,UAAmC,MAAvB0B,EAAG1B,SAAS2B,QAWxCC,QAfY,SAACF,GACb,OAAOA,GAAMA,EAAG1B,UAAmC,MAAvB0B,EAAG1B,SAAS2B,S,iBC3BtCE,EAASC,IAAa,Q,4CAKrB,WAAqBC,EAAOC,GAA5B,eAAAC,EAAA,sEACgBC,EAAKhB,KAAKW,EAAQ,CAAEE,QAAOC,aAD3C,QACGrB,EADH,SAGCwB,aAAaC,QATJ,QASsBzB,GAHhC,4C,kEAOA,WAA8BS,GAA9B,SAAAa,EAAA,sDACHE,aAAaC,QAdA,QAckBhB,GAD5B,4C,sBAgBA,SAASiB,IACZ,OAAOF,aAAaG,QA9BP,SAGjBJ,EAAKf,SAASkB,KA8BC,OACXE,MA5BG,SAAP,qCA6BIC,OAlBG,SAAgBC,GACnBN,aAAaO,WAlBA,UAoCbC,eAfG,WACH,IACI,IAAMvB,EAAQe,aAAaG,QAvBlB,SAwBT,OAAOM,IAAUxB,GACnB,MAAOR,GACL,OAAO,OAWXiC,eAxBG,SAAP,mCAyBIR,YCtCER,EAASC,IAAa,S,4CAErB,WAAwBW,GAAxB,qBAAAR,EAAA,6DACeF,EAA0BU,EAApCK,SAAiBd,EAAmBS,EAAnBT,SAAUe,EAASN,EAATM,KADhC,SAEoBb,EAAKhB,KAAKW,EAAQ,CAAEE,QAAOC,WAAUe,SAFzD,cAEG/C,EAFH,yBAGIA,EAASsB,QAJG,iBAChB,4C,sBAMQ,OACX0B,SAPG,SAAP,oC,yBCFMnB,EAASC,IAAa,UACtBmB,EAAW,SAAAC,GAAE,gBAAOrB,EAAP,YAAiBqB,IAE7B,SAASC,IACd,OAAOjB,EAAKpB,IAAIe,G,4CAGX,WAA4BuB,EAAYC,EAAUC,EAASC,GAA3D,uCAAAtB,EAAA,6DAAiEuB,EAAjE,+BAAyE,GAAIC,EAA7E,+BAAuF,GAAIC,EAA3F,uBACCC,GAAcP,EAAa,GAAKC,EAClCO,EAAa,EAFZ,SAIgBT,IAJhB,cAICU,EAJD,OAKC3D,EAAS4D,IACZC,MAAMF,GACNG,QAAQ,SAAAC,GAAK,OACA,MAAXX,GAAmBA,GAAW,GAAKW,EAAMC,MAAMC,MAAQb,KAC9C,MAATI,GAAiBO,EAAMG,MAAMC,oBAAoB7D,QAAQkD,EAAMW,sBAAwB,IACvFZ,EAAQjD,QAAQyD,GAAS,KAE3BK,QAAQ,QAACf,QAAD,IAACA,OAAD,EAACA,EAAMgB,MAAO,QAAChB,QAAD,IAACA,OAAD,EAACA,EAAMiB,QAC7BC,KAAI,SAACZ,GACJA,EAAOa,SAAQ,SAAAT,GAAeT,EAAMhD,QAAQyD,IAAU,IAAGA,EAAMT,OAAQ,MACvEI,EAAaC,EAAOc,UAErBC,MAAMjB,GACNkB,KAAKxB,GACLyB,QAnBE,kBAqBE,CACLjB,OAAQ3D,EACR0D,WAAYA,IAvBT,6C,sBA2BA,SAASmB,EAAS7B,GACvB,OAAOhB,EAAKpB,IAAImC,EAASC,IAGpB,SAAe8B,EAAtB,kC,4CAAO,WAAyBf,GAAzB,iBAAAhC,EAAA,0DACDgC,EAAME,IADL,uBAEGjB,EAAKe,EAAME,WACXc,EAHH,eAGehB,IACNE,IAJT,kBAKIjC,EAAKnB,IAAIkC,EAASC,GAAK+B,IAL3B,gCAQI/C,EAAKhB,KAAKW,EAAQoC,IARtB,4C,sBAyBQ,OACbiB,YAbK,SAAqBhC,GAC1B,OAAOhB,EAAKlB,OAAOiC,EAASC,KAa5B6B,WACA5B,YACA6B,YACAG,aA7DK,SAAP,0CCPMtD,EAASC,IAAa,UAWb,OACbsD,SALK,SAAkBlC,GACvB,OAAOhB,EAAKpB,IAPG,SAAAoC,GAAE,gBAAOrB,EAAP,YAAiBqB,GAOlBmC,CAASnC,KAKzBoC,UAVK,WACL,OAAOpD,EAAKpB,IAAIe,KC6CH0D,MAhDf,SAAgBC,GAAQ,IACZ/C,EAAS+C,EAAT/C,KAER,OACI,yBAAKgD,UAAU,sDACX,4BAAQA,UAAU,iBAAiBC,KAAK,SAASC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBACxJ,0BAAMN,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2BvC,GAAG,aACzC,yBAAKuC,UAAU,cACX,kBAAC,IAAD,CAASA,UAAU,oBAAoBO,GAAG,KAA1C,QACA,kBAAC,IAAD,CAASP,UAAU,oBAAoBO,GAAG,WAA1C,UACA,kBAAC,IAAD,CAASP,UAAU,oBAAoBO,GAAG,cAA1C,aACA,kBAAC,IAAD,CAASP,UAAU,oBAAoBO,GAAG,YAA1C,YAEJ,yBAAKP,UAAU,sCAENhD,GACA,kBAAC,IAAMwD,SAAP,KACG,kBAAC,IAAD,CAASR,UAAU,oBAAoBO,GAAG,UAA1C,SACA,kBAAC,IAAD,CAASP,UAAU,oBAAoBO,GAAG,aAA1C,aAKJvD,GAEI,kBAAC,IAAMwD,SAAP,KACI,uBAAGC,KAAK,IAAIC,QAAS,SAACC,GAAD,OAajD,SAAsBA,GAClBA,EAAEC,iBACFC,EAAY9D,SACZ+D,OAAOC,SAAW,IAhBkCC,CAAaL,IAAIX,UAAU,qBAAvD,UACA,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,QAAQhD,EAAKM,MAC7B,0BAAM0C,UAAU,e,wBCxBrCiB,EANF,SAAClB,GACV,OACI,kBAAC,IAAD,CAAiBC,UAAU,iBAAiBrB,MAAOoB,EAAMhC,MAAQ,SAAW,OAAQ2C,QAAS,kBAAMX,EAAMW,WAAWQ,KAAMnB,EAAMhC,MAAQoD,IAAeC,OCJzJC,EAAY,SAAZA,EAAatB,GAAW,IAClBuB,EAAkFvB,EAAlFuB,MAAOC,EAA2ExB,EAA3EwB,aAAcC,EAA6DzB,EAA7DyB,cAAeC,EAA8C1B,EAA9C0B,aAAcC,EAAgC3B,EAAhC2B,cAAeC,EAAiB5B,EAAjB4B,aAGnEC,EAAkB,SAAC9G,GAErB,OAAS6G,GAAgB7G,EAAK0G,KAAmBG,EAAaH,GAAkB,UAAY,IADjF,mBAMf,OACI,wBAAIxB,UAAU,cAEN3B,IAAEiD,GACGzC,QAAQ,CAAC6C,IACTG,KAAI,SAAC/G,GACF,IAAMwC,EAAOxC,EAAKyG,GACZ9D,EAAK3C,EAAK0G,GAChB,IAAKlE,IAASG,EAAI,MAAMqE,MAAM,GAAD,cAAYT,EAAZ,wCAC7B,OAAO,wBAAIrB,UAAW4B,EAAgB9G,GAAOiH,IAAKtE,EAAIiD,QAAS,kBAAMe,EAAa3G,KAAQwC,MAE7F+B,UAQrBgC,EAAUW,aAAe,CACrBT,aAAc,OACdC,cAAe,MACfE,cAAe,QACfJ,MAAO,IASID,QCtCAY,EANE,WACb,OACI,gDCSOC,EAVE,SAACnC,GAAW,IACjBjC,EAAeiC,EAAfjC,KAAMgB,EAASiB,EAATjB,KACd,OACI,kBAAC,IAAD,CACIkB,UAAWlC,EAAKgB,OAASA,EAAO,GAAK,SACrCoC,KAAqB,QAAfpD,EAAKiB,MAAkBoD,IAAWC,O,kCCL9CC,GAAQ,SAACtC,GAAW,IACd5E,EAAgC4E,EAAhC5E,MAAOmC,EAAyByC,EAAzBzC,KAAMgF,EAAmBvC,EAAnBuC,MAAUC,EADV,aACmBxC,EADnB,0BAGrB,OACI,yBAAKC,UAAU,cACVsC,GAAS,2BAAOE,QAASlF,GAAOgF,GACjC,2CAAWC,EAAX,CAAiBjF,KAAMA,EAAM0C,UAAU,kBAEtC7E,GAAS,yBAAK6E,UAAU,sBAAsB7E,KAI3DkH,GAAML,aAAe,CACjB/B,KAAM,QAOKoC,UCCAI,GArBA,SAAC1C,GAAW,IACf2C,EAAyC3C,EAAzC2C,QAASvH,EAAgC4E,EAAhC5E,MAAOmC,EAAyByC,EAAzBzC,KAAMgF,EAAmBvC,EAAnBuC,MAAUC,EADlB,aAC2BxC,EAD3B,oCAGtB,OACI,yBAAKC,UAAU,cACX,2BAAOwC,QAASlF,GAAOgF,GACvB,4CAAYC,EAAZ,CAAkBjF,KAAMA,EAAM0C,UAAU,iBACpC,4BAAQX,MAAM,KACbqD,EAAQb,KAAI,SAAAc,GAAM,OACf,4BAAQZ,IAAKY,EAAOjE,IAAKW,MAAOsD,EAAOjE,KAAMiE,EAAOrF,UAG3DnC,GAAS,yBAAK6E,UAAU,sBAAsB7E,KC0E5CyH,G,4MAlFXC,MAAQ,CACJ3H,KAAM,GACN4H,OAAQ,I,EAGZC,SAAW,WACP,IACQ5H,EAAU6H,IAAID,SAAS,EAAKF,MAAM3H,KAAM,EAAK+H,OADrC,CAAEC,YAAY,IACtB/H,MAER,IAAKA,EAAO,OAAO,KACnB,IAAM2H,EAAS,GAEf,OADA3H,EAAMgI,QAAQlE,SAAQ,SAAA9D,GAAK,OAAI2H,EAAO3H,EAAM2D,KAAK,IAAM3D,EAAMiI,WACtDN,G,EAWXO,aAAe,SAAC1C,GACZA,EAAEC,iBACF,IAAMkC,EAAS,EAAKC,WACpB,EAAKO,SAAS,CAAER,OAAQA,GAAU,KAC9BA,GAAUA,EAAO5D,QACrB,EAAKqE,U,EAGTC,aAAe,SAACC,GACZ,IAAMC,EAASD,EAAME,cACbrG,EAAgBoG,EAAhBpG,KAAM+B,EAAUqE,EAAVrE,MACRyD,EAAM,eAAQ,EAAKD,MAAMC,QACzBc,EAAe,EAAKC,iBAAiBH,GACvCE,EAAcd,EAAOY,EAAOpG,MAAQsG,SAC5Bd,EAAOY,EAAOpG,MAE1B,IAAMpC,EAAI,eAAQ,EAAK2H,MAAM3H,MAC7BA,EAAKoC,GAAQ+B,EACb,EAAKiE,SAAS,CAAEpI,OAAM4H,Y,EAE1BgB,YAAc,SAACnD,GACXA,EAAEC,iBACF,IAAM1F,EAAO,EAAK2H,MAAM3H,KACxBmD,IAAEY,QAAQ/D,GAAM,SAAC6I,EAAMC,GACnB9I,EAAK8I,GAAS,MAElB,EAAKV,SAAS,CAAEpI,OAAM4H,OAAQ,M,+DAlCjBmB,GAAQ,IACb3G,EAAgB2G,EAAhB3G,KAAM+B,EAAU4E,EAAV5E,MACR6E,EAAG,eAAM5G,EAAO+B,GAChB4D,EAAM,eAAM3F,EAAO6G,KAAKlB,OAAO3F,IAC7BnC,EAAU6H,IAAID,SAASmB,EAAKjB,GAA5B9H,MACR,OAAOA,EAAQA,EAAMgI,QAAQ,GAAGC,QAAU,O,kCA+BlC9F,EAAMgF,GAAuB,IAAD,OAAfrC,EAAe,uDAAR,OACpB/E,EAASiJ,KAAKtB,MAAd3H,KACR,OACI,kBAAC,GAAD,CACImE,MAAOnE,EAAKoC,GACZ8G,SAAU,SAACzD,GAAD,OAAO,EAAK6C,aAAa7C,IACnCrD,KAAMA,EACNgF,MAAOA,EACP7E,GAAIH,EACJ2C,KAAMA,EACN9E,MAAOgJ,KAAKtB,MAAMC,OAAOxF,O,mCAGxBA,EAAMgF,EAAOI,GAAU,IAAD,EACNyB,KAAKtB,MAAtBC,EADuB,EACvBA,OAAQ5H,EADe,EACfA,KAChB,OACI,kBAAC,GAAD,CACIwH,QAASA,EACTrD,MAAOnE,EAAKoC,GACZ8G,SAAUD,KAAKX,aACflG,KAAMA,EACNgF,MAAOA,EACPnH,MAAO2H,EAAOxF,O,2CAIY,IAAD,OAAlBgF,EAAkB,uDAAV,SACvB,OAAO,4BAAQ+B,SAAUF,KAAKpB,WAAY/C,UAAU,uBAAuBU,QAAS,SAACC,GAAD,OAAO,EAAK0C,aAAa1C,KAAK2B,O,GA/EvGlI,aCWJkK,GAfG,SAACvE,GAAW,IAClBV,EAA+BU,EAA/BV,MAAO+E,EAAwBrE,EAAxBqE,SAAUpE,EAAcD,EAAdC,UAEzB,OACI,2BACIC,KAAK,OACLqC,MAAM,SACNiC,YAAY,YACZjH,KAAK,QACL+B,MAAOA,EACPW,UAAW,gBAAkBA,EAC7BoE,SAAU,SAAAzD,GAAC,OAAIyD,EAASzD,EAAEgD,cAActE,WCuBrCmF,GAhCK,SAACzE,GAAW,IACpB0E,EAA0B1E,EAA1B0E,QAAS3G,EAAiBiC,EAAjBjC,KAAM4G,EAAW3E,EAAX2E,OAKvB,OACI,+BACI,4BAEQD,EAAQ5C,KAAI,SAAC8C,GAAY,IACb7F,EAAqB6F,EAArB7F,KAAMH,EAAegG,EAAfhG,MAAOoD,EAAQ4C,EAAR5C,IASrB,OAPIpD,EACS,wBAAIoD,IAAKA,GAAOjD,EAAMkB,UAAU,iBAAiBU,QAAS,kBAZ3F,SAAmB5B,GACf,IAAMC,EAASjB,GAAQgB,IAAShB,EAAKgB,MAAwB,QAAfhB,EAAKiB,MAAkB,OAAkB,MACvF2F,EAAO,CAAE5F,KAAMA,EAAMC,MAAOA,IAUiE6F,CAAU9F,KAC/E,8BAAOH,GACP,kBAAC,EAAD,CAAUb,KAAMA,EAAMgB,KAAMA,KAGvB,wBAAIiD,IAAKA,GAAOjD,UCCtC+F,GAtBG,SAAC9E,GAAW,IAClB7E,EAAkB6E,EAAlB7E,KAAMuJ,EAAY1E,EAAZ0E,QAQd,OACI,+BAEQvJ,EAAK2G,KAAI,SAAC/G,EAAMkJ,GAAP,OACL,wBAAIjC,IAAKjH,EAAKiH,KAAOiC,GAChBS,EAAQ5C,KAAI,SAAC8C,GAAD,OAAY,wBAAI5C,IAAK4C,EAAO7F,MAAQ6F,EAAO5C,KAZzD,SAACjH,EAAM6J,GAAY,IAC1B7F,EAAkB6F,EAAlB7F,KAAMgG,EAAYH,EAAZG,QACd,OAAIA,EAAgBA,EAAQhK,GAEjBuD,IAAEhD,IAAIP,EAAMgE,GAQuDiG,CAAWjK,EAAM6J,a,mBCFvGH,GAAYQ,UAAY,CACpBlH,KAAMmH,KAAUC,OAAOC,WACvBT,OAAQO,KAAUG,KAAKD,WACvBV,QAASQ,KAAUI,MAAMF,YAEdG,OAdD,SAACvF,GAAW,IACd0E,EAAkD1E,EAAlD0E,QAASvJ,EAAyC6E,EAAzC7E,KAAMwJ,EAAmC3E,EAAnC2E,OAAQa,EAA2BxF,EAA3BwF,SAAUC,EAAiBzF,EAAjByF,OAAQ1H,EAASiC,EAATjC,KACjD,OACI,2BAAOkC,UAAU,SACb,kBAAC,GAAD,CAAalC,KAAMA,EAAM2G,QAASA,EAASC,OAAQ,SAAC5G,GAAD,OAAU4G,EAAO5G,MACpE,kBAAC,GAAD,CAAW5C,KAAMA,EAAMuJ,QAASA,EAASc,SAAU,SAAC/G,GAAD,OAAW+G,EAAS/G,IAAQgH,OAAQ,SAAChH,GAAD,OAAWgH,EAAOhH,QCyCtGiH,I,MA9CS,SAAC1F,GAAU,IAEvB2F,EAAyD3F,EAAzD2F,iBAAkBvH,EAAuC4B,EAAvC5B,WAAYP,EAA2BmC,EAA3BnC,SAAU+H,EAAiB5F,EAAjB4F,aAC1CC,EAAaC,KAAKC,KAAK3H,EAAaP,GACpCmI,EAAe1H,IAAE2H,MAAM,EAAGJ,EAAa,GAIvCK,EAAoB,SAACtI,GAEvB,OAAQA,IAAe+H,EAAmB,UAAY,IADzC,4BAMjB,OACI,yBAAK1F,UAAU,qDACX,wBAAIA,UAAU,cACV,wBAAIA,UAAU,2BAA2BqE,SAA+B,IAArBqB,EAAwBhF,QAAS,kBAAMiF,EAAaD,EAAmB,KACtH,4BAAQ1F,UAAU,aAAlB,aAGA+F,EAAalE,KAAI,SAAClE,GAAD,OACb,wBAAIoE,IAAKpE,EAAY0G,SAAUqB,IAAqB/H,EAAYqC,UAAWiG,EAAkBtI,GAAa+C,QAAS,kBAAMiF,EAAahI,KAClI,4BAAQqC,UAAU,aAAarC,OAI3C,wBAAIqC,UAAU,2BAA2BqE,SAAUqB,IAAqBE,EAAYlF,QAAS,kBAAMiF,EAAaD,EAAmB,KAC/H,4BAAQ1F,UAAU,aAAlB,UAGR,6CAAoB0F,EAAmB9H,EAAYO,EAAaA,EAAcuH,EAAmB9H,EAAjG,OAAgHO,M,QCkB7G+H,G,4MA9CXjD,OAAS,CACL5F,SAAU2F,IAAImD,SAASC,WAAW9D,MAAM,YACxC/F,SAAUyG,IAAImD,SAASC,WAAW9D,MAAM,a,EAE5CO,MAAQ,CACJ3H,KAAM,CAAEmC,SAAU,GAAId,SAAU,IAChCuG,OAAQ,I,wLAGuBqB,KAAKtB,MAAM3H,KAAlCmC,E,EAAAA,SAAUd,E,EAAAA,S,kBAERsE,EAAY/D,MAAMO,EAAUd,G,OAC1BsG,EAAUsB,KAAKpE,MAAMgB,SAArB8B,MACR/B,OAAOC,SAAW8B,EAAQA,EAAMwD,KAAKC,SAAW,I,gDAE5CC,EAAYpK,QAAZ,SACM2G,EADmB,eACLqB,KAAKtB,MAAMC,SACxB0D,KAAO,KAAGjM,SAASW,KAC1BiJ,KAAKb,SAAS,CAAER,Y,8IAKlB,IAAD,aACL,GAAIjC,EAAY3D,iBACZ,OAAO,kBAAC,KAAD,CAAUqD,GAAG,MAFnB,IAKGrF,EAASiJ,KAAKtB,MAAd3H,KACR,OACI,6BACI,qCACA,0BAAMuL,OAAO,IACT,kBAAC,GAAD,CAAOpH,MAAOnE,EAAKmC,SAAU+G,SAAU,SAACzD,GAAD,OAAO,EAAK6C,aAAa7C,IAAIrD,KAAK,WAAWgF,MAAM,YAAY7E,GAAG,WAAWtC,MAAK,UAAEgJ,KAAKtB,MAAMC,cAAb,aAAE,EAAmBzF,WAC9I,kBAAC,GAAD,CAAOgC,MAAOnE,EAAKqB,SAAU6H,SAAU,SAACzD,GAAD,OAAO,EAAK6C,aAAa7C,IAAIrD,KAAK,WAAWgF,MAAM,WAAW7E,GAAG,WAAWwC,KAAK,WAAW9E,MAAK,UAAEgJ,KAAKtB,MAAMC,cAAb,aAAE,EAAmBvG,YAE5J,UAAA4H,KAAKtB,MAAMC,cAAX,eAAmB0D,OAAQ,yBAAKxG,UAAU,sBAAsBmE,KAAKtB,MAAMC,OAAO0D,MAEnF,4BAAQnC,SAAUF,KAAKpB,WAAY/C,UAAU,uBAAuBU,QAAS,SAACC,GAAD,OAAO,EAAK0C,aAAa1C,KAAtG,SACA,4BAAQX,UAAU,iBAAiBU,QAAS,SAACC,GAAD,OAAO,EAAKmD,YAAYnD,KAApE,e,GAxCAiC,IC+CL8D,G,4MAjDXzD,OAAS,CACL5F,SAAU2F,IAAImD,SAAS7J,QAAQ8J,WAAW9D,MAAM,YAAYqE,MAAM,2JAClEpK,SAAUyG,IAAImD,SAASS,IAAI,GAAGC,IAAI,IAAIT,WAAW9D,MAAM,YACvDhF,KAAM0F,IAAImD,SAASC,WAAW9D,MAAM,S,EAExCO,MAAQ,CACJ3H,KAAM,CAAEmC,SAAU,GAAId,SAAU,GAAIe,KAAM,IAC1CwF,OAAQ,I,kMAIgBgE,EAAavJ,SAAS4G,KAAKtB,MAAM3H,M,OAA/CS,E,OACNkF,EAAYzD,eAAezB,GAC3BmF,OAAOC,SAAW,I,gDAEdwF,EAAYpK,QAAZ,SACM2G,EADmB,eACLqB,KAAKtB,MAAMC,SACxB0D,KAAO,KAAGjM,SAASW,KAC1BiJ,KAAKb,SAAS,CAAER,Y,yJAMpBjC,EAAY3D,kBACZiH,KAAKpE,MAAMgH,QAAQC,QAAQ,O,+BAIzB,IAAD,eACG9L,EAASiJ,KAAKtB,MAAd3H,KACR,OACI,6BACI,wCACA,0BAAMuL,OAAO,IACT,kBAAC,GAAD,CAAOpH,MAAOnE,EAAKmC,SAAU+G,SAAU,SAACzD,GAAD,OAAO,EAAK6C,aAAa7C,IAAIrD,KAAK,WAAWgF,MAAM,YAAY7E,GAAG,WAAWtC,MAAK,UAAEgJ,KAAKtB,MAAMC,cAAb,aAAE,EAAmBzF,WAC9I,kBAAC,GAAD,CAAOgC,MAAOnE,EAAKqB,SAAU6H,SAAU,SAACzD,GAAD,OAAO,EAAK6C,aAAa7C,IAAIrD,KAAK,WAAWgF,MAAM,WAAW7E,GAAG,WAAWwC,KAAK,WAAW9E,MAAK,UAAEgJ,KAAKtB,MAAMC,cAAb,aAAE,EAAmBvG,WAC7J,kBAAC,GAAD,CAAO8C,MAAOnE,EAAKoC,KAAM8G,SAAU,SAACzD,GAAD,OAAO,EAAK6C,aAAa7C,IAAIrD,KAAK,OAAOgF,MAAM,OAAO7E,GAAG,OAAOtC,MAAK,UAAEgJ,KAAKtB,MAAMC,cAAb,aAAE,EAAmBxF,QAE5H,UAAA6G,KAAKtB,MAAMC,cAAX,eAAmB0D,OAAQ,yBAAKxG,UAAU,sBAAsBmE,KAAKtB,MAAMC,OAAO0D,MAEnF,4BAAQnC,SAAUF,KAAKpB,WAAY/C,UAAU,uBAAuBU,QAAS,SAACC,GAAD,OAAO,EAAK0C,aAAa1C,KAAtG,YACA,4BAAQX,UAAU,iBAAiBU,QAAS,SAACC,GAAD,OAAO,EAAKmD,YAAYnD,KAApE,e,GA3CGiC,I,ICHIxI,Y,kBC2DZ6M,GA5CK,SAAClH,GAAW,IACpB5B,EAAuD4B,EAAvD5B,WAAYC,EAA2C2B,EAA3C3B,OAAQN,EAAmCiC,EAAnCjC,KAAM0H,EAA6BzF,EAA7ByF,OAAQD,EAAqBxF,EAArBwF,SAAUb,EAAW3E,EAAX2E,OAC9CD,EAAU,CACZ,CACI1C,IAAK,QACLjD,KAAM,QACNH,MAAO,QACPmG,QAAS,YAAqB,IAAlBpG,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MACPuI,EAAI,kBAAcxI,GACxB,OAAO,kBAAC,IAAD,CAAM6B,GAAI2G,GAAQvI,KAGjC,CAAEG,KAAM,aAAcH,MAAO,SAC7B,CAAEG,KAAM,gBAAiBH,MAAO,SAChC,CAAEG,KAAM,kBAAmBH,MAAO,QAClC,CACIoD,IAAK,OAAQ+C,QAAS,SAAAtG,GAAK,OAAI,kBAAC,EAAD,CAAMT,MAAOS,EAAMT,MAAO2C,QAAS,kBAAM8E,EAAOhH,QAEnF,CACIuD,IAAK,SAAU+C,QAAS,SAAAtG,GAAK,OACzB,4BAAQG,MAAM,SAAS+B,QAAS,kBAAM6E,EAAS/G,IAAQwB,UAAU,yBAC7D,kBAAC,IAAD,CAAiBkB,KAAMiG,UAIjCnK,EAAO6D,EAAY3D,iBAKzB,OAJKF,GAASA,EAAKoK,SACf/I,IAAEgJ,OAAO5C,GAAS,SAAAE,GAAM,MAAmB,WAAfA,EAAO5C,OAInC,6BACI,sCAAY5D,EAAZ,4BACA,kBAAC,GAAD,CAAOjD,KAAMkD,EAAQN,KAAMA,EAAM2G,QAASA,EAASC,OAAQ,SAAC5G,GAAD,OAAU4G,EAAO5G,IAAOyH,SAAU,SAAC/G,GAAD,OAAW+G,EAAS/G,IAAQgH,OAAQ,SAAChH,GAAD,OAAWgH,EAAOhH,QCsEhJ8I,G,4MArGXlJ,OAAS,G,EACTmJ,OAAS,G,EACT3J,SAAW,E,EACXiF,MAAQ,CACJzE,OAAQ,GACRD,WAAY,EACZP,SAAU,EAAKA,SACf8H,iBAAkB,EAClBzH,MAAO,GACPuJ,cAAe,KACf1J,KAAM,CAAEgB,KAAM,QAASC,MAAO,OAC9BhB,MAAO,GACPC,QAAS,I,0MAMYyJ,EAAc5H,Y,cAA7B0H,E,OACAtJ,EAAQyJ,KAAYC,MAAMxD,KAAKpE,MAAMgB,SAAS6G,QAC9CC,EAAaN,EAAOO,MAAK,SAACrJ,GAAD,OAAWR,EAAMQ,OAASA,EAAMnB,KAAKyK,gBAAkB9J,EAAMQ,MAAMsJ,iBAC5FP,EAAgBK,GAA0BN,EAAO,G,SAClCS,EAActI,aAAa,EAAGyE,KAAKvG,SAAU4J,EAAc9I,K,OAA1EjE,E,OAEN0J,KAAKb,SAAS,CACVlF,OAAQ3D,EAAO2D,OACfD,WAAY1D,EAAO0D,WACnBoJ,OAAQA,EACRC,cAAeA,I,sIAIb,IAAD,SAC0FrD,KAAKtB,MAA5FzE,EADH,EACGA,OAAQD,EADX,EACWA,WAAYoJ,EADvB,EACuBA,OAAQC,EAD/B,EAC+BA,cAAe9B,EAD9C,EAC8CA,iBAAkB9H,EADhE,EACgEA,SAAUE,EAD1E,EAC0EA,KAAMG,EADhF,EACgFA,MAC7EjB,EAASmH,KAAKpE,MAAd/C,KAER,OACI,yBAAKgD,UAAU,OACX,yBAAKA,UAAU,SACX,kBAAC,EAAD,CAAW2B,aAAc6F,EAAelG,MAAOiG,EAAQ9F,aAAc,SAAC3G,GAAD,OAAU,EAAKmN,kBAAkBnN,OAE1G,yBAAKkF,UAAU,SAEPhD,GAAQA,EAAKoK,SACb,kBAAC,IAAD,CAAMpH,UAAU,kBAAkBO,GAAG,eAArC,aAEJ,kBAAC,GAAD,CAAWP,UAAU,OAAOoE,SAAU,SAACzD,GAAD,OAAO,EAAKuH,aAAavH,IAAItB,MAAOpB,IAEpEG,GAAWA,EAAOc,OAGZ,kBAAC,IAAMsB,SAAP,KACI,kBAAC,GAAD,CAAarC,WAAYA,EAAYL,KAAMA,EAAMM,OAAQA,EAAQsG,OAAQ,SAAC5G,GAAD,OAAU,EAAKqK,WAAWrK,IAAO0H,OAAQ,SAAChH,GAAD,OAAW,EAAK4J,WAAW5J,IAAQ+G,SAAU,SAAC/G,GAAD,OAAW,EAAK6J,aAAa7J,MAC5L,kBAAC,GAAD,CAAiBZ,SAAUA,EAAUO,WAAYA,EAAYuH,iBAAkBA,EAAkBC,aAAc,SAAC2C,GAAD,OAAU,EAAKC,iBAAiBD,OAJtJ,4D,4EAgBNrK,G,oFACTuK,EAAW,CAAEvK,QAAOuJ,cAAe,KAAMiB,YAAa,G,SACvBtE,KAAKzE,aAAa8I,G,gBAA/CpK,E,EAAAA,OAAQD,E,EAAAA,WAChBgG,KAAKb,SAAL,2BAAmBkF,GAAnB,IAA6BpK,SAAQD,gB,iLAExBL,G,2FACwBqG,KAAKzE,aAAa,CAAE5B,S,gBAAjDM,E,EAAAA,OAAQD,E,EAAAA,WAChBgG,KAAKb,SAAS,CAAElF,SAAQD,aAAYL,S,wLAEhB0J,G,kFACpBrD,KAAKpE,MAAMgH,QAAQ2B,KAAK,CAAEd,OAAO,UAAD,OAAYJ,EAAclK,KAAKyK,iB,SAC1B5D,KAAKzE,aAAa,CAAE8H,gBAAe9B,iBAAkB,I,gBAAlFtH,E,EAAAA,OAAQD,E,EAAAA,WAChBgG,KAAKb,SAAS,CAAElF,SAAQD,aAAYqJ,gBAAe9B,iBAAkB,I,uLAElDA,G,2FACkBvB,KAAKzE,aAAa,CAAEgG,qB,gBAAjDtH,E,EAAAA,OAAQD,E,EAAAA,WAChBgG,KAAKb,SAAS,CAAElF,SAAQD,aAAYuH,qB,mLAErBlH,G,2FACTwJ,EAAcvI,YAAYjB,EAAME,K,uBACDyF,KAAKzE,e,gBAAlCtB,E,EAAAA,OAAQD,E,EAAAA,WAChBgG,KAAKb,SAAS,CAAElF,SAAQD,e,iLAEXK,G,2FACPwJ,EAAcW,gBAAgBnK,G,uBACC2F,KAAKzE,e,gBAAlCtB,E,EAAAA,OAAQD,E,EAAAA,WAChBgG,KAAKb,SAAS,CAAElF,SAAQD,e,mLAETqK,G,+HACyErE,KAAKtB,OAAU2F,GAA/FhB,E,EAAAA,cAAe9B,E,EAAAA,iBAAkB9H,E,EAAAA,SAAUE,E,EAAAA,KAAMC,E,EAAAA,MAAOC,E,EAAAA,QAASC,E,EAAAA,M,SACpC+J,EAActI,aAAagG,EAAkB9H,EAA7C,OAAuD4J,QAAvD,IAAuDA,OAAvD,EAAuDA,EAAe9I,IAAKZ,EAAMC,EAAOC,EAASC,G,uBAA9HG,E,EAAAA,OAAQD,E,EAAAA,W,kBACT,CAAEC,SAAQD,e,4GAnGJ/D,aCgDNwO,G,4MA1DX/F,MAAQ,CACJ3H,KAAM,CAAEyD,MAAO,GAAId,QAAS,GAAIgL,cAAe,GAAIC,gBAAiB,IACpEvB,OAAQ,GACRzE,OAAQ,I,EAEZG,OAAS,CACLvE,IAAKsE,IAAImD,SACTxH,MAAOqE,IAAImD,SAASC,WAAW9D,MAAM,SACrCzE,QAASmF,IAAImD,SAASC,WAAW9D,MAAM,SACvCuG,cAAe7F,IAAI+F,SAASnC,IAAI,GAAGC,IAAI,KAAKT,WAAW9D,MAAM,mBAC7DwG,gBAAiB9F,IAAI+F,SAASnC,IAAI,GAAGC,IAAI,IAAIT,WAAW9D,MAAM,sB,EAgClEiB,O,sBAAS,sBAAA/G,EAAA,sEACCwL,EAAczI,UAAU,EAAKsD,MAAM3H,MADpC,OAEL,EAAK6E,MAAMgH,QAAQ2B,KAAK,WAFnB,2C,sMA5BgBjB,EAAc5H,Y,UAA7B0H,E,OACNpD,KAAKb,SAAS,CAAEiE,WAGA,SADVyB,EAAU7E,KAAKpE,MAAMkJ,MAAMC,OAAOzL,I,iEAGpBuK,EAAc1I,SAAS0J,G,UAArCxK,E,iDACa2F,KAAKpE,MAAMgH,QAAQC,QAAQ,e,QAE9C7C,KAAKb,SAAS,CAAEpI,KAAMiJ,KAAKgF,gBAAgB3K,K,sIAGrC,IAAD,OACL,OACI,6BACI,yCACA,0BAAMiI,OAAO,IACRtC,KAAKiF,YAAY,QAAS,SAC1BjF,KAAKkF,aAAa,UAAW,QAASlF,KAAKtB,MAAM0E,QACjDpD,KAAKiF,YAAY,gBAAiB,kBAAmB,UACrDjF,KAAKiF,YAAY,kBAAmB,oBAAqB,UAC1D,4BAAQ/E,SAAUF,KAAKpB,WAAY/C,UAAU,uBAAuBU,QAAS,SAACC,GAAD,OAAO,EAAK0C,aAAa1C,KAAtG,QACA,4BAAQX,UAAU,iBAAiBU,QAAS,SAACC,GAAD,OAAO,EAAKmD,YAAYnD,KAApE,a,sCAWAnC,GACZ,MAAO,CACHE,IAAKF,EAAME,IACXC,MAAOH,EAAMG,MACbd,QAASW,EAAMC,MAAMC,IACrBmK,cAAerK,EAAMqK,cACrBC,gBAAiBtK,EAAMsK,qB,GAtDZlG,ICiBR0G,GAlBQ,SAACvJ,GAAW,IACZ3F,EAA+B2F,EAA1CwJ,UAAsBC,EAAoBzJ,EAApByJ,OAAWjH,EADX,aACoBxC,EADpB,wBAE9B,OAEI,kBAAC,KAAD,iBACQwC,EADR,CAEIiH,OACI,SAACC,GACG,OAAK5I,EAAY3D,iBAGN9C,EAAY,kBAACA,EAAcqP,GAAiBD,EAAOC,GAFnD,kBAAC,KAAD,CAAUlJ,GAAI,CAAE+F,SAAU,SAAUzD,MAAO,CAAEwD,KAAMtG,EAAMgB,kBCQzE2I,GAdG,SAAC3J,GACf,OACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOjB,KAAK,SAAS0K,OAAQ,SAACC,GAAD,OAAgB,kBAAC,GAAUA,MACxD,kBAAC,KAAD,CAAO3K,KAAK,YAAY0K,OAAQ,SAACC,GAAD,OAAgB,kBAAC,GAAaA,MAC9D,kBAAC,GAAD,CAAgB3K,KAAK,cAAcyK,UAAWX,KAC9C,kBAAC,KAAD,CAAO9J,KAAK,UAAU0K,OAAQ,SAACC,GAAD,OAAgB,kBAAC,GAAD,iBAAYA,EAAZ,CAAwBzM,KAAM+C,EAAM/C,WAClF,kBAAC,KAAD,CAAO8B,KAAK,YAAYyK,UAAWtH,IACnC,kBAAC,KAAD,CAAUoE,KAAK,IAAIsD,OAAK,EAACpJ,GAAG,YAC5B,kBAAC,KAAD,CAAUA,GAAG,gBCaVqJ,I,kNAtBb/G,MAAQ,CACN7F,KAAM,M,kEAIN,IAAMA,EAAO6D,EAAY3D,iBACzBiH,KAAKb,SAAS,CAAEtG,W,+BAKhB,OACE,kBAAC,IAAMwD,SAAP,KACE,kBAAC,EAAD,CAAQxD,KAAMmH,KAAKtB,MAAM7F,OACzB,yBAAKgD,UAAU,aACb,kBAAC,GAAD,CAAWhD,KAAMmH,KAAKtB,MAAM7F,a,GAhBpB5C,cCMEyP,QACW,cAA7B/I,OAAOC,SAAS+I,UAEe,UAA7BhJ,OAAOC,SAAS+I,UAEhBhJ,OAAOC,SAAS+I,SAASb,MACvB,2DCXNc,IAASP,OACP,kBAAC,IAAMQ,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAtP,GACLuP,QAAQvP,MAAMA,EAAMiI,c","file":"static/js/main.3f7d201a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Home extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <h1>Home</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import axios from \"axios\";\r\nimport { headerTokenKey } from '../config.json';\r\n\r\n\r\n\r\naxios.interceptors.response.use((result) => {\r\n    const url = result.config.url;\r\n    const fullResponseList = [\r\n        '/api/users/',\r\n        '/api/auth/',\r\n    ];\r\n    let hasFullResponse = false;\r\n    fullResponseList.every((item) => {\r\n        if (url.indexOf(item) > -1) {\r\n            return hasFullResponse = true;\r\n        }\r\n    });\r\n\r\n    if (!hasFullResponse)\r\n        return Promise.resolve(result.data);\r\n    else\r\n        return Promise.resolve(result);\r\n}, (error) => {\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport function setToken(token) {\r\n    axios.defaults.headers.common[headerTokenKey] = token;\r\n}\r\n\r\nconst is400Ex = (ex) => {\r\n    return ex && ex.response && ex.response.status === 400\r\n}\r\nconst is404Ex = (ex) => {\r\n    return ex && ex.response && ex.response.status === 404\r\n}\r\n\r\nexport default {\r\n    get: axios.get,\r\n    put: axios.put,\r\n    delete: axios.delete,\r\n    patch: axios.patch,\r\n    post: axios.post,\r\n    setToken,\r\n    is404Ex: is404Ex,\r\n    is400Ex: is400Ex\r\n}","import http from \"./http-service\";\r\nimport { baseApiUrl } from \"../config.json\";\r\nimport JwtDecode from 'jwt-decode';\r\nconst tokenKey = \"token\";\r\nconst apiUrl = baseApiUrl + \"auth/\";\r\n\r\nhttp.setToken(getToken());\r\n\r\n\r\nexport async function login(email, password) {\r\n    const data = await http.post(apiUrl, { email, password });\r\n    if (data) {\r\n        localStorage.setItem(tokenKey, data);\r\n    }\r\n}\r\n\r\nexport async function loginWithToken(token) {\r\n    localStorage.setItem(tokenKey, token);\r\n}\r\n\r\nexport function logout(user) {\r\n    localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n    try {\r\n        const token = localStorage.getItem(tokenKey);\r\n        return JwtDecode(token);\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\nexport function getToken() {\r\n    return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n    login,\r\n    logout,\r\n    getCurrentUser,\r\n    loginWithToken,\r\n    getToken,\r\n}","import http from \"./http-service\";\r\nimport { baseApiUrl } from \"../config.json\";\r\n\r\nconst apiUrl = baseApiUrl + \"users/\";\r\nconst headerTokenKey = \"x-auth-token\";\r\nexport async function register(user) {\r\n    const { username: email, password, name } = user;\r\n    const response = await http.post(apiUrl, { email, password, name });\r\n    return response.headers[headerTokenKey];\r\n}\r\n\r\nexport default {\r\n    register: register\r\n}","import _ from 'lodash';\nimport http from \"./http-service\";\nimport { baseApiUrl } from \"../config.json\";\nconst apiUrl = baseApiUrl + \"movies/\";\nconst movieUrl = id => `${apiUrl}/${id}`;\n\nexport function getMovies() {\n  return http.get(apiUrl);\n}\n\nexport async function searchMovies(pageNumber, pageSize, genreId, sort, liked = [], deleted = [], query) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  let totalCount = 0;\n\n  const movies = await getMovies();\n  const result = _\n    .chain(movies)\n    .filter((movie =>\n      (genreId == null || genreId <= 0 || movie.genre._id === genreId) &&\n      (query == null || movie.title.toLocaleLowerCase().indexOf(query.toLocaleLowerCase()) >= 0) &&\n      (deleted.indexOf(movie) < 0))\n    )\n    .orderBy([sort?.path], [sort?.order])\n    .tap((movies) => {\n      movies.forEach(movie => { if (liked.indexOf(movie) >= 0) movie.liked = true; })\n      totalCount = movies.length;\n    })\n    .slice(startIndex)\n    .take(pageSize)\n    .value();\n\n  return {\n    movies: result,\n    totalCount: totalCount,\n  }\n}\n\nexport function getMovie(id) {\n  return http.get(movieUrl(id));\n}\n\nexport async function saveMovie(movie) {\n  if (movie._id) {\n    const id = movie._id;\n    const body = { ...movie };\n    delete body._id;\n    return http.put(movieUrl(id), body);\n  }\n  else {\n    return http.post(apiUrl, movie);\n  }\n\n}\n\nexport function deleteMovie(id) {\n  return http.delete(movieUrl(id));\n}\n\nexport async function toggleLikeMovie(id) {\n  const movie = await getMovie(id);\n  if (movie) {\n    movie.like = !movie.like;\n    return await saveMovie(movie);\n  }\n}\n\nexport default {\n  deleteMovie,\n  getMovie,\n  getMovies,\n  saveMovie,\n  searchMovies,\n};","import http from \"./http-service\";\nimport { baseApiUrl } from \"../config.json\";\n\nconst apiUrl = baseApiUrl + \"genres/\";\nconst genreUrl = id => `${apiUrl}/${id}`;\n\nexport function getGenres() {\n  return http.get(apiUrl);\n}\n\nexport function getGenre(id) {\n  return http.get(genreUrl(id));\n}\n\nexport default {\n  getGenre,\n  getGenres,\n};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { authService } from '../../services';\r\n\r\nfunction Navbar(props) {\r\n    const { user } = props;\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-4\">\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <div className=\"navbar-nav\">\r\n                    <NavLink className=\"nav-link nav-item\" to=\"/\">Home</NavLink>\r\n                    <NavLink className=\"nav-link nav-item\" to=\"/movies\">Movies</NavLink>\r\n                    <NavLink className=\"nav-link nav-item\" to=\"/customers\">Customers</NavLink>\r\n                    <NavLink className=\"nav-link nav-item\" to=\"/rentals\">Rentals</NavLink>\r\n                </div>\r\n                <div className=\"navbar-nav ml-auto nav-flex-icons\">\r\n                    {\r\n                        !user &&\r\n                        (<React.Fragment>\r\n                            <NavLink className=\"nav-link nav-item\" to=\"/login\">Login</NavLink>\r\n                            <NavLink className=\"nav-link nav-item\" to=\"/register\">Register</NavLink>\r\n                        </React.Fragment>)\r\n                    }\r\n\r\n                    {\r\n                        user &&\r\n                        (\r\n                            <React.Fragment>\r\n                                <a href=\"#\" onClick={(e) => handleLogout(e)} className=\"nav-link nav-item\">Logout</a>\r\n                                <div className=\"user-profile\">\r\n                                    <span className=\"name\">{user.name}</span>\r\n                                    <span className=\"icon\"></span>\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </nav >\r\n    );\r\n\r\n    function handleLogout(e) {\r\n        e.preventDefault();\r\n        authService.logout();\r\n        window.location = \"/\";\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart as faHeartSolid } from '@fortawesome/free-solid-svg-icons';\r\nimport { faHeart as faHeartReg } from '@fortawesome/free-regular-svg-icons';\r\n\r\nconst Like = (props) => {\r\n    return (\r\n        <FontAwesomeIcon className=\"cursor-pointer\" title={props.liked ? 'Unlike' : 'Like'} onClick={() => props.onClick()} icon={props.liked ? faHeartSolid : faHeartReg} />\r\n    );\r\n}\r\n\r\nexport default Like;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nconst ListGroup = (props) => {\r\n    const { items, textProperty, valueProperty, onItemSelect, orderProperty, selectedItem } = props;\r\n\r\n    //#region ----------------------------------- Methods\r\n    const getItemCssClass = (item) => {\r\n        let base = \"list-group-item\";\r\n        return ((selectedItem && item[valueProperty] === selectedItem[valueProperty]) ? 'active ' : '') + base;\r\n    }\r\n    //#endregion --------------------------------\r\n\r\n    //#region ----------------------------------- Lifecycle\r\n    return (\r\n        <ul className=\"list-group\">\r\n            {\r\n                _(items)\r\n                    .orderBy([orderProperty])\r\n                    .map((item) => {\r\n                        const name = item[textProperty];\r\n                        const id = item[valueProperty];\r\n                        if (!name || !id) throw Error(`${typeof (ListGroup)} must have a valid name & id props.`);\r\n                        return <li className={getItemCssClass(item)} key={id} onClick={() => onItemSelect(item)}>{name}</li>;\r\n                    })\r\n                    .value()\r\n            }\r\n        </ul>\r\n    );\r\n    //#endregion --------------------------------\r\n\r\n}\r\n\r\nListGroup.defaultProps = {\r\n    textProperty: 'name',\r\n    valueProperty: '_id',\r\n    orderProperty: 'order',\r\n    items: []\r\n};\r\nListGroup.propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n    textProperty: PropTypes.string.isRequired,\r\n    valueProperty: PropTypes.string.isRequired,\r\n    onItemSelect: PropTypes.func.isRequired,\r\n    selectedItem: PropTypes.object\r\n};\r\nexport default ListGroup;\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <h1>Page Not Found!</h1>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSortDown, faSortUp } from '@fortawesome/free-solid-svg-icons';\r\nconst SortIcon = (props) => {\r\n    const { sort, path } = props;\r\n    return (\r\n        <FontAwesomeIcon\r\n            className={sort.path === path ? '' : 'd-none'}\r\n            icon={sort.order === 'asc' ? faSortUp : faSortDown}\r\n        />\r\n    );\r\n}\r\n\r\nexport default SortIcon;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Input = (props) => {\r\n    const { error, name, label, ...rest } = props;\r\n\r\n    return (\r\n        <div className=\"form-group\">\r\n            {label && <label htmlFor={name}>{label}</label>}\r\n            <input {...rest} name={name} className=\"form-control\" />\r\n\r\n            {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        </div>\r\n    );\r\n}\r\nInput.defaultProps = {\r\n    type: 'text',\r\n}\r\nInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string,\r\n    type: PropTypes.string.isRequired,\r\n}\r\nexport default Input;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Select = (props) => {\r\n    const { options, error, name, label, ...rest } = props;\r\n\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <select {...rest} name={name} className=\"form-control\">\r\n                <option value=\"\"></option>\r\n                {options.map(option => (\r\n                    <option key={option._id} value={option._id}>{option.name}</option>\r\n                ))}\r\n            </select>\r\n            {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        </div>\r\n    );\r\n}\r\nSelect.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n}\r\nexport default Select;","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport _ from 'lodash';\r\nimport Input from './input';\r\nimport Select from './select';\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        data: {},\r\n        errors: {}\r\n    };\r\n\r\n    validate = () => {\r\n        const options = { abortEarly: false };\r\n        const { error } = Joi.validate(this.state.data, this.schema, options);\r\n\r\n        if (!error) return null;\r\n        const errors = {};\r\n        error.details.forEach(error => errors[error.path[0]] = error.message);\r\n        return errors;\r\n    }\r\n\r\n    validateProperty(input) {\r\n        const { name, value } = input;\r\n        const obj = { [name]: value };\r\n        const schema = { [name]: this.schema[name] };\r\n        const { error } = Joi.validate(obj, schema);\r\n        return error ? error.details[0].message : null;\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const errors = this.validate();\r\n        this.setState({ errors: errors || {} });\r\n        if (errors && errors.length) return;\r\n        this.submit();\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const target = event.currentTarget;\r\n        const { name, value } = target;\r\n        const errors = { ...this.state.errors };\r\n        const errorMessage = this.validateProperty(target);\r\n        if (errorMessage) errors[target.name] = errorMessage;\r\n        else delete errors[target.name];\r\n\r\n        const data = { ...this.state.data };\r\n        data[name] = value;\r\n        this.setState({ data, errors });\r\n    }\r\n    handleClear = (e) => {\r\n        e.preventDefault();\r\n        const data = this.state.data;\r\n        _.forEach(data, (prop, index) => {\r\n            data[index] = \"\";\r\n        });\r\n        this.setState({ data, errors: {} });\r\n    }\r\n    renderInput(name, label, type = 'text') {\r\n        const { data } = this.state;\r\n        return (\r\n            <Input\r\n                value={data[name]}\r\n                onChange={(e) => this.handleChange(e)}\r\n                name={name}\r\n                label={label}\r\n                id={name}\r\n                type={type}\r\n                error={this.state.errors[name]} />\r\n        );\r\n    }\r\n    renderSelect(name, label, options) {\r\n        const { errors, data } = this.state;\r\n        return (\r\n            <Select\r\n                options={options}\r\n                value={data[name]}\r\n                onChange={this.handleChange}\r\n                name={name}\r\n                label={label}\r\n                error={errors[name]} />\r\n        );\r\n    }\r\n\r\n    renderSubmitButton(label = \"Submit\") {\r\n        return <button disabled={this.validate()} className=\"btn btn-primary mr-4\" onClick={(e) => this.handleSubmit(e)}>{label}</button>;\r\n    }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst SearchBox = (props) => {\r\n    const { value, onChange, className } = props;\r\n\r\n    return (\r\n        <input\r\n            type=\"text\"\r\n            label=\"Search\"\r\n            placeholder=\"Search...\"\r\n            name=\"query\"\r\n            value={value}\r\n            className={\"form-control \" + className}\r\n            onChange={e => onChange(e.currentTarget.value)}\r\n        />\r\n    );\r\n}\r\nexport default SearchBox;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport SortIcon from '../sort-icon';\r\n\r\nconst TableHeader = (props) => {\r\n    const { columns, sort, onSort } = props;\r\n    function raiseSort(path) {\r\n        const order = (sort && path === sort.path) ? (sort.order === 'asc' ? 'desc' : 'asc') : 'asc';\r\n        onSort({ path: path, order: order });\r\n    }\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                {\r\n                    columns.map((column) => {\r\n                        const { path, title, key } = column;\r\n                        let result;\r\n                        if (title)\r\n                            result = <th key={key || path} className=\"cursor-pointer\" onClick={() => raiseSort(path)}>\r\n                                <span>{title}</span>\r\n                                <SortIcon sort={sort} path={path} />\r\n                            </th>;\r\n                        else\r\n                            result = <th key={key || path}></th>;\r\n                        return result;\r\n                    })\r\n                }\r\n            </tr>\r\n        </thead >\r\n    );\r\n}\r\nTableHeader.propTypes = {\r\n    sort: PropTypes.object.isRequired,\r\n    onSort: PropTypes.func.isRequired,\r\n    columns: PropTypes.array.isRequired,\r\n};\r\nexport default TableHeader;","import React from 'react'\r\nimport _ from 'lodash';\r\nconst TableBody = (props) => {\r\n    const { data, columns } = props;\r\n    const renderCell = (item, column) => {\r\n        const { path, content } = column;\r\n        if (content) return content(item);\r\n        else {\r\n            return _.get(item, path);\r\n        }\r\n    }\r\n    return (\r\n        <tbody>\r\n            {\r\n                data.map((item, index) =>\r\n                    <tr key={item.key || index}>\r\n                        {columns.map((column) => <td key={column.path || column.key}>{renderCell(item, column)}</td>)}\r\n                    </tr>\r\n                )\r\n            }\r\n        </tbody>\r\n    );\r\n}\r\n\r\nexport default TableBody;","import React from 'react';\r\nimport TableHeader from './table-header';\r\nimport TableBody from './table-body';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Table = (props) => {\r\n    const { columns, data, onSort, onDelete, onLike, sort } = props;\r\n    return (\r\n        <table className=\"table\">\r\n            <TableHeader sort={sort} columns={columns} onSort={(sort) => onSort(sort)} />\r\n            <TableBody data={data} columns={columns} onDelete={(movie) => onDelete(movie)} onLike={(movie) => onLike(movie)} />\r\n        </table>\r\n    );\r\n}\r\nTableHeader.propTypes = {\r\n    sort: PropTypes.object.isRequired,\r\n    onSort: PropTypes.func.isRequired,\r\n    columns: PropTypes.array.isRequired,\r\n};\r\nexport default Table;","import React from 'react'\r\nimport './table-pagination.scss';\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TablePagination = (props) => {\r\n    //#region ----------------------------------- Variables\r\n    const { activePageNumber, totalCount, pageSize, onPageChange } = props;\r\n    const pagesCount = Math.ceil(totalCount / pageSize);\r\n    const pagesNumbers = _.range(1, pagesCount + 1);\r\n    //#endregion --------------------------------\r\n\r\n    //#region ----------------------------------- Methods\r\n    const getPageCssClasses = (pageNumber) => {\r\n        const base = \"page-item cursor-pointer\";\r\n        return (pageNumber === activePageNumber ? 'active ' : '') + base;\r\n    }\r\n    //#endregion --------------------------------\r\n\r\n    //#region ----------------------------------- Lifecycle\r\n    return (\r\n        <nav className=\"d-flex align-items-center justify-content-between\">\r\n            <ul className=\"pagination\">\r\n                <li className=\"page-item cursor-pointer\" disabled={activePageNumber === 1} onClick={() => onPageChange(activePageNumber - 1)}>\r\n                    <button className=\"page-link\">Previous</button>\r\n                </li>\r\n                {\r\n                    pagesNumbers.map((pageNumber) =>\r\n                        <li key={pageNumber} disabled={activePageNumber === pageNumber} className={getPageCssClasses(pageNumber)} onClick={() => onPageChange(pageNumber)}>\r\n                            <button className=\"page-link\">{pageNumber}</button>\r\n                        </li>\r\n                    )\r\n                }\r\n                <li className=\"page-item cursor-pointer\" disabled={activePageNumber === pagesCount} onClick={() => onPageChange(activePageNumber + 1)}>\r\n                    <button className=\"page-link\">Next</button>\r\n                </li>\r\n            </ul>\r\n            <span>Total items {(activePageNumber * pageSize) > totalCount ? totalCount : (activePageNumber * pageSize)} of {totalCount}</span>\r\n        </nav>\r\n    );\r\n    //#endregion --------------------------------\r\n}\r\n\r\n\r\nTablePagination.propTypes = {\r\n    activePageNumber: PropTypes.number.isRequired,\r\n    totalCount: PropTypes.number.isRequired,\r\n    pageSize: PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default TablePagination;","import React from 'react';\r\nimport { Input } from '../../shared';\r\nimport Joi from 'joi-browser';\r\nimport Form from '../../shared/form/form';\r\nimport { authService } from '../../services';\r\nimport httpService from '../../services/http-service';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Login extends Form {\r\n    schema = {\r\n        username: Joi.string().required().label(\"UserName\"),\r\n        password: Joi.string().required().label(\"Password\"),\r\n    };\r\n    state = {\r\n        data: { username: \"\", password: \"\" },\r\n        errors: {}\r\n    };\r\n    async submit() {\r\n        const { username, password } = this.state.data;\r\n        try {\r\n            await authService.login(username, password);\r\n            const { state } = this.props.location;\r\n            window.location = state ? state.from.pathname : '/';\r\n        } catch (ex) {\r\n            if (httpService.is400Ex(ex)) {\r\n                const errors = { ...this.state.errors };\r\n                errors.form = ex.response.data;\r\n                this.setState({ errors });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (authService.getCurrentUser()) {\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n        const { data } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>Login</h1>\r\n                <form action=\"\">\r\n                    <Input value={data.username} onChange={(e) => this.handleChange(e)} name=\"username\" label=\"User Name\" id=\"username\" error={this.state.errors?.username} />\r\n                    <Input value={data.password} onChange={(e) => this.handleChange(e)} name=\"password\" label=\"Password\" id=\"password\" type=\"password\" error={this.state.errors?.password} />\r\n\r\n                    {this.state.errors?.form && <div className=\"alert alert-danger\">{this.state.errors.form}</div>}\r\n\r\n                    <button disabled={this.validate()} className=\"btn btn-primary mr-4\" onClick={(e) => this.handleSubmit(e)}>Login</button>\r\n                    <button className=\"btn btn-danger\" onClick={(e) => this.handleClear(e)}>Clear</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Input } from '../../shared';\r\nimport Joi from 'joi-browser';\r\nimport Form from '../../shared/form/form';\r\nimport { httpService, usersService, authService } from '../../services';\r\nclass Register extends Form {\r\n    schema = {\r\n        username: Joi.string().email().required().label(\"UserName\").regex(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/),\r\n        password: Joi.string().min(8).max(16).required().label(\"Password\"),\r\n        name: Joi.string().required().label(\"Name\"),\r\n    };\r\n    state = {\r\n        data: { username: \"\", password: \"\", name: \"\" },\r\n        errors: {}\r\n    };\r\n    async submit() {\r\n        try {\r\n            const token = await usersService.register(this.state.data);\r\n            authService.loginWithToken(token);\r\n            window.location = \"/\";\r\n        } catch (ex) {\r\n            if (httpService.is400Ex(ex)) {\r\n                const errors = { ...this.state.errors };\r\n                errors.form = ex.response.data;\r\n                this.setState({ errors });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (authService.getCurrentUser()) {\r\n            this.props.history.replace('/');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { data } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>Register</h1>\r\n                <form action=\"\">\r\n                    <Input value={data.username} onChange={(e) => this.handleChange(e)} name=\"username\" label=\"User Name\" id=\"username\" error={this.state.errors?.username} />\r\n                    <Input value={data.password} onChange={(e) => this.handleChange(e)} name=\"password\" label=\"Password\" id=\"password\" type=\"password\" error={this.state.errors?.password} />\r\n                    <Input value={data.name} onChange={(e) => this.handleChange(e)} name=\"name\" label=\"Name\" id=\"name\" error={this.state.errors?.name} />\r\n\r\n                    {this.state.errors?.form && <div className=\"alert alert-danger\">{this.state.errors.form}</div>}\r\n\r\n                    <button disabled={this.validate()} className=\"btn btn-primary mr-4\" onClick={(e) => this.handleSubmit(e)}>Register</button>\r\n                    <button className=\"btn btn-danger\" onClick={(e) => this.handleClear(e)}>Clear</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react'\r\n\r\nclass MovieDetails extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <h1>Movie Form {this.props.match.params.id}</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieDetails;","//#region --------------------------------------- React\r\nimport React from 'react'\r\n//#endregion ------------------------------------\r\n\r\n//#region --------------------------------------- 3rd-Parties\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\nimport _ from 'lodash';\r\n//#endregion ------------------------------------\r\n\r\n//#region --------------------------------------- Shared\r\nimport { Table, Like } from '../../shared';\r\nimport { authService } from '../../services';\r\n//#endregion ------------------------------------\r\n\r\nconst MoviesTable = (props) => {\r\n    const { totalCount, movies, sort, onLike, onDelete, onSort } = props;\r\n    const columns = [\r\n        {\r\n            key: 'title',\r\n            path: 'title',\r\n            title: 'Title',\r\n            content: ({ _id, title }) => {\r\n                const link = `/movies/${_id}`;\r\n                return <Link to={link} >{title}</Link>\r\n            }\r\n        },\r\n        { path: 'genre.name', title: 'Genre' },\r\n        { path: 'numberInStock', title: 'Stock' },\r\n        { path: 'dailyRentalRate', title: 'Rate' },\r\n        {\r\n            key: 'like', content: movie => <Like liked={movie.liked} onClick={() => onLike(movie)} />\r\n        },\r\n        {\r\n            key: 'delete', content: movie =>\r\n                <button title=\"Delete\" onClick={() => onDelete(movie)} className=\"btn btn-danger btn-sm\">\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                </button>\r\n        },\r\n    ];\r\n    const user = authService.getCurrentUser();\r\n    if (!user || !user.isAdmin) {\r\n        _.remove(columns, column => column.key === 'delete')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p>Showing {totalCount} movies in the database.</p>\r\n            <Table data={movies} sort={sort} columns={columns} onSort={(sort) => onSort(sort)} onDelete={(movie) => onDelete(movie)} onLike={(movie) => onLike(movie)} />\r\n        </div>\r\n    );\r\n}\r\nMoviesTable.propTypes = {\r\n    onLike: PropTypes.func.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    onSort: PropTypes.func.isRequired,\r\n    movies: PropTypes.array,\r\n    totalCount: PropTypes.number.isRequired,\r\n}\r\nexport default MoviesTable;","//#region --------------------------------------- React\r\nimport React, { Component } from 'react';\r\n//#endregion ------------------------------------\r\nimport queryString from 'query-string';\r\nimport _ from 'lodash';\r\n//#region --------------------------------------- Shared\r\nimport { Link } from 'react-router-dom';\r\nimport { ListGroup, TablePagination } from '../../shared';\r\n//#endregion ------------------------------------\r\n\r\n//#region --------------------------------------- Module\r\nimport MoviesTable from './movies-table';\r\nimport SearchBox from '../../shared/form/search-box';\r\nimport { moviesService, genresService } from '../../services';\r\n//#endregion ------------------------------------\r\n\r\nclass Movies extends Component {\r\n\r\n    //#region ----------------------------------- Variables\r\n    movies = [];\r\n    genres = [];\r\n    pageSize = 5;\r\n    state = {\r\n        movies: [],\r\n        totalCount: 0,\r\n        pageSize: this.pageSize,\r\n        activePageNumber: 1,\r\n        query: \"\",\r\n        selectedGenre: null,\r\n        sort: { path: 'title', order: 'asc' },\r\n        liked: [],\r\n        deleted: []\r\n    }\r\n    //#endregion --------------------------------\r\n\r\n    //#region ----------------------------------- Lifecycle\r\n    async componentDidMount() {\r\n        const genres = await genresService.getGenres();\r\n        const query = queryString.parse(this.props.location.search);\r\n        const queryGenre = genres.find((genre) => query.genre && genre.name.toLowerCase() === query.genre.toLowerCase());\r\n        const selectedGenre = queryGenre ? queryGenre : genres[0];\r\n        const result = await moviesService.searchMovies(1, this.pageSize, selectedGenre._id);\r\n\r\n        this.setState({\r\n            movies: result.movies,\r\n            totalCount: result.totalCount,\r\n            genres: genres,\r\n            selectedGenre: selectedGenre\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { movies, totalCount, genres, selectedGenre, activePageNumber, pageSize, sort, query } = this.state;\r\n        const { user } = this.props;\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ListGroup selectedItem={selectedGenre} items={genres} onItemSelect={(item) => this.handleGenreSelect(item)} />\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    {\r\n                        user && user.isAdmin &&\r\n                        <Link className=\"btn btn-primary\" to=\"/movies/new\">New Movie</Link>\r\n                    }\r\n                    <SearchBox className=\"my-4\" onChange={(e) => this.handleSearch(e)} value={query} />\r\n                    {\r\n                        (!movies || !movies.length) ?\r\n                            (<p>No movies in the database</p>) :\r\n                            (\r\n                                <React.Fragment>\r\n                                    <MoviesTable totalCount={totalCount} sort={sort} movies={movies} onSort={(sort) => this.handleSort(sort)} onLike={(movie) => this.handleLike(movie)} onDelete={(movie) => this.handleDelete(movie)} />\r\n                                    <TablePagination pageSize={pageSize} totalCount={totalCount} activePageNumber={activePageNumber} onPageChange={(page) => this.handlePageChange(page)} />\r\n                                </React.Fragment>\r\n                            )\r\n                    }\r\n                </div>\r\n            </div >\r\n\r\n        );\r\n    }\r\n    //#endregion --------------------------------\r\n\r\n    //#region ----------------------------------- Handlers\r\n    async handleSearch(query) {\r\n        const newState = { query, selectedGenre: null, currentPage: 1 };\r\n        const { movies, totalCount } = await this.searchMovies(newState);\r\n        this.setState({ ...newState, movies, totalCount });\r\n    }\r\n    async handleSort(sort) {\r\n        const { movies, totalCount } = await this.searchMovies({ sort });\r\n        this.setState({ movies, totalCount, sort });\r\n    }\r\n    async handleGenreSelect(selectedGenre) {\r\n        this.props.history.push({ search: `?genre=${selectedGenre.name.toLowerCase()}` });\r\n        const { movies, totalCount } = await this.searchMovies({ selectedGenre, activePageNumber: 1 });\r\n        this.setState({ movies, totalCount, selectedGenre, activePageNumber: 1 });\r\n    }\r\n    async handlePageChange(activePageNumber) {\r\n        const { movies, totalCount } = await this.searchMovies({ activePageNumber });\r\n        this.setState({ movies, totalCount, activePageNumber });\r\n    }\r\n    async handleDelete(movie) {\r\n        await moviesService.deleteMovie(movie._id);\r\n        const { movies, totalCount } = await this.searchMovies();\r\n        this.setState({ movies, totalCount });\r\n    }\r\n    async handleLike(movie) {\r\n        await moviesService.toggleLikeMovie(movie);\r\n        const { movies, totalCount } = await this.searchMovies();\r\n        this.setState({ movies, totalCount });\r\n    }\r\n    async searchMovies(newState) {\r\n        const { selectedGenre, activePageNumber, pageSize, sort, liked, deleted, query } = { ...this.state, ...newState };\r\n        const { movies, totalCount } = await moviesService.searchMovies(activePageNumber, pageSize, selectedGenre?._id, sort, liked, deleted, query);\r\n        return { movies, totalCount };\r\n    }\r\n    //#endregion --------------------------------\r\n}\r\n\r\nexport default Movies;","import React from 'react'\r\nimport { Form, Input } from '../../shared';\r\nimport Joi from 'joi-browser';\r\nimport { genresService, moviesService } from '../../services';\r\n\r\nclass NewMovie extends Form {\r\n    state = {\r\n        data: { title: \"\", genreId: \"\", numberInStock: \"\", dailyRentalRate: \"\" },\r\n        genres: [],\r\n        errors: {}\r\n    }\r\n    schema = {\r\n        _id: Joi.string(),\r\n        title: Joi.string().required().label(\"Title\"),\r\n        genreId: Joi.string().required().label(\"Genre\"),\r\n        numberInStock: Joi.number().min(0).max(100).required().label(\"Number In Stock\"),\r\n        dailyRentalRate: Joi.number().min(0).max(10).required().label(\"Daily Rental Rate\"),\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const genres = await genresService.getGenres();\r\n        this.setState({ genres });\r\n\r\n        const movieId = this.props.match.params.id;\r\n        if (movieId === 'new') return;\r\n\r\n        const movie = await moviesService.getMovie(movieId);\r\n        if (!movie) return this.props.history.replace('/not-found');\r\n\r\n        this.setState({ data: this.mapToMovieModel(movie) });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>New Movie</h1>\r\n                <form action=\"\">\r\n                    {this.renderInput('title', 'Title')}\r\n                    {this.renderSelect('genreId', 'Genre', this.state.genres)}\r\n                    {this.renderInput('numberInStock', 'Number In Stock', 'number')}\r\n                    {this.renderInput('dailyRentalRate', 'Daily Rental Rate', 'number')}\r\n                    <button disabled={this.validate()} className=\"btn btn-primary mr-4\" onClick={(e) => this.handleSubmit(e)}>Save</button>\r\n                    <button className=\"btn btn-danger\" onClick={(e) => this.handleClear(e)}>Clear</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    submit = async () => {\r\n        await moviesService.saveMovie(this.state.data);\r\n        this.props.history.push('/movies');\r\n    }\r\n\r\n    mapToMovieModel(movie) {\r\n        return {\r\n            _id: movie._id,\r\n            title: movie.title,\r\n            genreId: movie.genre._id,\r\n            numberInStock: movie.numberInStock,\r\n            dailyRentalRate: movie.dailyRentalRate\r\n        }\r\n    }\r\n}\r\n\r\nexport default NewMovie;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authService } from '../services';\r\n\r\nconst ProtectedRoute = (props) => {\r\n    const { component: Component, render, ...rest } = props;\r\n    return (\r\n\r\n        <Route\r\n            {...rest}\r\n            render={\r\n                (innerProps) => {\r\n                    if (!authService.getCurrentUser())\r\n                        return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n                    else\r\n                        return Component ? <Component {...innerProps} /> : render(innerProps);\r\n                }\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { NotFound } from '../shared';\r\nimport { Login, Register } from './layout';\r\nimport { NewMovie, Movies } from './movies';\r\nimport ProtectedRoute from '../shared/protected-route';\r\n\r\nconst AppRoutes = (props) => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/login\" render={(innerProps) => <Login {...innerProps} />} />\r\n            <Route path=\"/register\" render={(innerProps) => <Register {...innerProps} />} />\r\n            <ProtectedRoute path=\"/movies/:id\" component={NewMovie} />\r\n            <Route path=\"/movies\" render={(innerProps) => <Movies {...innerProps} user={props.user} />} />\r\n            <Route path=\"/no-found\" component={NotFound} />\r\n            <Redirect from=\"/\" exact to=\"/movies\" />\r\n            <Redirect to=\"/no-found\" />\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default AppRoutes;","import React, { Component } from 'react';\nimport { Navbar } from './layout';\nimport AppRoutes from './app-routes';\nimport { authService } from '../services';\nimport './app.scss';\n\nclass App extends Component {\n  state = {\n    user: null\n  };\n\n  componentDidMount() {\n    const user = authService.getCurrentUser();\n    this.setState({ user });\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar user={this.state.user} />\n        <div className=\"container\">\n          <AppRoutes user={this.state.user} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './app/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}